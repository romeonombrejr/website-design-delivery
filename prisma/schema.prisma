// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../generated/prisma"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}


model Website {
  id        String   @id @default(uuid())
  name      String   @unique
  domain    String?  @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  pages     Page[]

  @@map("websites")
}

model Page {
  id        String    @id @default(uuid())
  name      String
  slug      String?    @unique
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  website   Website?   @relation(fields: [websiteId], references: [id])
  websiteId String?
  sections  Section[]

  @@map("pages")
}

model Section {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  pages     Page?      @relation(fields: [pageId], references: [id])
  pageId    String?
  elements  Element[]

  @@map("sections")
}

model Element {
  id        String    @id @default(uuid())
  tag       String
  key       String?   @default(uuid()) 
  className String?   @map("class_name")
  content   String?
  src       String?
  alt       String?
  link      String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  section   Section   @relation(fields: [sectionId], references: [id])
  sectionId String
  children  Element[] @relation("ElementRelation")
  parent    Element[] @relation("ElementRelation")

  @@map("elements")
}
